#!/usr/bin/env sage -python
# -*- coding: utf-8 -*-

from sage.all import *

###############################################################################
# Step 1: Define polynomial ring S in b, c, d, e_coef over QQ
###############################################################################
S = PolynomialRing(QQ, ['b','c','d','e_coef'])
b, c, d, e_coef = S.gens()  # Extract the ring generators

###############################################################################
# Step 2: Define the field of rational functions in (b,c,d,e_coef)
###############################################################################
K = S.fraction_field()

###############################################################################
# Step 3: Define a univariate polynomial ring R in x over K
###############################################################################
R = PolynomialRing(K, 'x')  # No shorthand: R.<x> = ...
x = R.gen()

###############################################################################
# Step 4: Define the denominator and polynomial coefficients
###############################################################################
D = (b**3 - 4*b*c + 8*d)

coef_x2 = (b**2*c - 4*c**2 + 2*b*d + 16*e_coef) / D
coef_x1 = (b**2*d - 4*c*d + 8*b*e_coef) / D
coef_x0 = (b**2*e_coef - d**2) / D

###############################################################################
# Step 5: Construct the polynomial P(x)
###############################################################################
P = x**3 + coef_x2*x**2 + coef_x1*x + coef_x0

###############################################################################
# Step 6: Compute the discriminant
###############################################################################
disc = P.discriminant()

###############################################################################
# Step 7: Print the results
###############################################################################
print("Polynomial P(x) =", P)
print("Discriminant =", disc)
